{"version":3,"sources":["Components/stores/UserStore.js","Components/submitButton.js","Components/inputField.js","Components/loginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","SubmitButton","className","disabled","props","onClick","onCLick","text","React","Component","InputField","type","placeholder","value","onChange","e","target","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","isLogginIn","resetForm","alert","msg","console","log","setInputValue","doLogin","App","usernmae","clasName","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.282c7f60.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\n\n/**\n * UserStore\n */\n\nclass UserStore{\n    constructor(){\n        extendObservable(this, {\n            loading: true,\n            isLoggedIn: false,\n            username: ''\n        })\n    }\n}\n\nexport default new UserStore();","//March 12th - Hannah \nimport React from 'react';\n\nclass SubmitButton extends React.Component {\n  render(){\n    return (\n        <div className=\"submitButton\">\n        <button \n            className = 'btn'\n            disabled = {this.props.disabled}\n            onClick ={() => this.props.onCLick()}\n        >\n            {this.props.text}\n        </button>\n        </div>\n    );\n}\n}\n\nexport default SubmitButton;","//March 12th - Hannah \nimport React from 'react';\n//can be used for multople things (user name or password)\nclass InputField extends React.Component {\n  render(){\n  return (\n    <div className=\"inputField\">\n      <input \n        className = 'input'\n        type = {this.props.type}\n        placeholder = {this.props.placeholder}\n        value = {this.props.value}\n        //call back to pop function\n        onChange ={ (e) => this.props.onChange(e.target.value)}\n        />\n    </div>\n  );\n}\n}\n\nexport default InputField;","//March 12th - Hannah \nimport React from 'react';\nimport SubmitButton from './submitButton';\nimport UserStore from './stores/UserStore';\nimport InputField from './inputField';\n\n\n\nclass LoginForm extends React.Component {\n  \n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n\n    setInputValue(property, val){\n        val = val.trim();\n        //username and password have max length of 12\n        if (val.length >12){\n            return;\n        }\n        this.setState({\n            [property]:val\n        })\n    }\n    //resets form if something is incorrect\n    resetForm(){\n        this.setState({\n        username: '',\n        password: '',\n        buttonDisabled: false\n        })\n    }\n\n    async doLogin(){\n        if (!this.state.username){\n            return;\n        }\n        if(!this.state.password){\n            return;\n        }\n        this.setState({\n            buttonDisabled:true\n        })\n        try{\n            let res = await fetch('/login',{\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n            let result = await res.json();\n            //set values to \n            if (result && result.success){\n                UserStore.isLogginIn = true;\n                UserStore.username = result.username;\n            }\n            else if (result && result.success === false){\n                this.resetForm();\n                alert(result.msg);\n            }\n        }\n        catch(e){\n            console.log(e);\n            this.resetForm();\n        }\n    }\nrender(){\n    \n  return (\n    <div className=\"login Form\">\n        <InputField\n            type = 'text'\n            placeholder = 'Username'\n            value = {this.state.username ? this.state.username : ''}\n            onChange= { (val) => this.setInputValue('username',val)}\n            />\n        <InputField\n            type = 'text'\n            placeholder = 'Password'\n            value = {this.state.password ? this.state.password : ''}\n            onChange ={(val) =>this.setInputValue('password',val)}\n            />\n        <SubmitButton\n            text = 'Login'\n            disabled = {this.state.buttonDisabled}\n            onClick = { () => this.doLogin()}\n        />\n    </div>\n  );\n}\n}\n\nexport default LoginForm;","import React from 'react';\nimport {observer} from 'mobx-react';\nimport UserStore from './Components/stores/UserStore';\nimport SubmitButton from './Components/submitButton';\nimport LoginForm from './Components/loginForm';\nimport './App.css';\n\n//this youtube series is helping to set up login system -> \n//might have other videos https://www.youtube.com/watch?v=QoLUB0QkUaE&t=165s!\n\nclass App extends React.Component {\n  //March 12th - Hannah \n  //define methods of api \n  //login function \n  async componentDidMount(){\n    try{\n      //checks if user is logged in once component is mounted\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if (result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.usernmae = result.username;\n      }\n      else{\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch(e){\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  //logout function\n  async doLogout(){\n    try{\n      //checks if user is logged in once component is mounted\n      let res = await fetch('/isLoggedIn',{\n        method: 'post',\n        headers:{\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n      let result = await res.json();\n      if (result && result.success){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n        UserStore.usernmae = '';\n      }\n    }\n    catch(e){\n      console.log(e)\n    }\n  }\n\n  //rendering\n  render(){\n\n    if (UserStore.loading){\n      return (\n        <div className='app'>\n          <div className = 'container'>\n            Loading, please wait..\n          </div>\n\n      </div>\n      )\n    }\n\n    else{\n      if (UserStore.isLoggedIn){\n        <div className='app'>\n          <div className = \"container\">\n            Welcome {UserStore.username}\n            <SubmitButton\n              text={'Log out'}\n              disabled = {false}\n              onClick = {() => this.doLogout()}\n              />\n          </div>\n        </div>\n      }\n      return (\n        <div clasName = 'app'>\n          <div className = 'container'>\n            <LoginForm />\n          </div>\n        </div>\n\n      );\n\n    }\n}\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}